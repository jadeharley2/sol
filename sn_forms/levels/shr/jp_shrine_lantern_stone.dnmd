{
	name : "jp.shrine.lantern.stone",
	matpath : [ 
		"models/dyntest/mat",
		"textures/debug"
	], 
	variables : {
		"$size" : 1,
		"$mat" : "concrete06b.json",
	},
	world : {sca:1}, 
	operations : [ 
		
		//anchors
		
		{ type : "ngon", out : "lantern_base", 
			sides : 4,
			r : 0.2,
			pos : [0,0,-0.1],
			angle:45
		},     
		{ type : "material",in : "lantern_base",
			material : "$mat",//"stone.json"
			smooth:false,
		},  
		
		//base
		
		{ type : "extrude", in : "lantern_base",out : "sides", outtop : "base",  
			mode : "normal",
			shift : 0.2,
			times : 1,
		},     
		{ type : "flip", in : "lantern_base",out : "out", }, 
		
		{ type : "inset", from : "base",out : {face : "base",edge:"out"}, 
			mode : "normal",
			amount : 0.03, 
			extrude : 0.05, 
		},     
		{ type : "inset", from : "base",out : {face : "base", edge:"out"}, 
			mode : "normal",
			amount : 0.03,   
		},   
		
		//column
		
		{ type : "extrude", from : "base",out : "sides", outtop : "base",  
			mode : "normal",
			shift : 0.08, 
		},      
		{ type : "inset", from : "base",out : {face : "base", edge:"out"}, 
			mode : "normal",
			amount : 0.02,   
			extrude : 0.3, 
		},   
		{ type : "extrude", from : "base",out : "sides", outtop : "base",  
			mode : "normal",
			shift : 0.08, 
		},       
		
		//lower cap
		
		{ type : "inset", from : "base",out : {face : "base", edge:"out"}, 
			mode : "normal",
			amount : -0.05,   
			extrude : 0, 
		},   
		{ type : "inset", from : "base",out : {face : "base",edge:"out"}, 
			mode : "normal",
			amount : -0.03, 
			extrude : 0.05, 
		},     
		{ type : "extrude", from : "base",out : "sides", outtop : "base",  
			mode : "normal",
			shift : 0.05, 
		},        
		{ type : "inset", from : "base",out : {face : "base_f",edge:"out"}, 
			mode : "normal",
			amount : 0.04,  
		},     
		
		//frame
		{ type : "extrude", in : "base_f",out : "frame_base", outtop : "base_t",  
			mode : "normal",
			shift : 0.2,  
		},       
		
		{ type : "inset", from : "frame_base",out : {face : "hole",edge:"frame"}, 
			mode : "normal",
			amount : 0.04,  
		},        
		{ type : "extrude", from : "hole",out : "out", outtop : "hole",  
			mode : "normal",
			shift : -0.03, 
		},       
		{ type : "inset", from : "hole",out : {face : "*",edge:"frame"}, 
			mode : "normal",
			amount : -0.011,  
		},        
		{ type : "inset", from : "base_f",out : {face : "out",edge:"*"}, 
			mode : "normal",
			amount : 0.03,  
			extrude : 0.03, 
		},         
		{ type : "flip", in : "base_t",out : "flipped", },         
		{ type : "inset", from : "flipped",out : {face : "out",edge:"*"}, 
			mode : "normal",
			amount : 0.03,  
			extrude : 0.03, 
		},         
		
		//upper cap
		
		{ type : "inset", from : "base_t",out : {face : "base",edge:"out"}, 
			mode : "normal",
			amount : -0.06,  
		},       
		{ type : "inset", from : "base",out : {face : "roof_base",edge:"roof"}, 
			mode : "normal",
			amount : -0.02,  
			extrude : 0.03, 
		},       
		{ type : "select", in : "roof_base", out : "roofedgepoints", 
			mode : "points", 
		},   
		{ type : "inset", from : "roof_base",out : {face : "base",edge:"roof"}, 
			mode : "normal",
			amount : 0.05,  
			extrude : 0.03, 
		},       
		
		{ type : "split",from : "roof",out : "roof", 
			steps :5,       
			stype:"constant",     
		},    
		{ type :  "pointdeform", in : "roof",inpoints : "roofedgepoints",
			r : 0.01,pow : 0.02,dir : [0,0,1],
			func : "sin",
		},   
		
		{ type : "inset", from : "base",out : {face : "base",edge:"out"}, 
			mode : "normal",
			amount : 0.05,  
			extrude : 0.05, 
		},     
		{ type : "inset", from : "base",out : {face : "base",edge:"out"}, 
			mode : "normal",
			amount : 0.03,   
		},     
		{ type : "extrude", from : "base",out : "sides", outtop : "base",  
			mode : "normal",
			shift : 0.06, 
		},       
		{ type : "inset", from : "base",out : {face : "base",edge:"out"}, 
			mode : "normal",
			amount : 0.02,  
			extrude : 0.03, 
		},     
		
		{ type : "uvmap", in:["out","sides","frame"],
			edge : 1,     
			scale : 3.0     ,
			shift : [0.0 ,0.0], 
			mul : [1,1,1],
		},        
		
	]
}