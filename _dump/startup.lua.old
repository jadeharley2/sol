if SERVER then return nil end



local cam = ents.CreateCamera()
cam:SetParent(LOBBY)
cam:Spawn()

AddOrigin(cam)
SetCamera(cam) 



local serverconnect = false

local loadworld = false
local charcontroll = true
local testgui = true

function ConnectTo(ip)
	return network.Connect(ip)
end
function LoadWorld()
	U = ents.Create()
	U:SetSizepower(math.pow(2,88))
	U:SetSeed(1000001)
	U:SetGlobalName("u1")
	U:Spawn() 

	space = ents.Create("spaceCluster") 
	space:SetSeed(1000002)
	space:SetParent(U) 
	space:SetSizepower(math.pow(2,86))
	space:SetGlobalName("u1.mc")
	space:Spawn() 
	
	--AddOrigin(cam)
	cam:SetUpdateSpace(true)
	
	SendTo(cam,"@u1.mc;-0.002718567,0.0005680526,0.004285494;0.3089897,0.02846826,0.06682603;s1065632697;s2008649333;0.02,0,0")--ship
	--SendTo(cam,"@u1.mc;-0.002718567,0.0005680526,0.004285494;0.3089897,0.02846826,0.06682603;s1065632697;s2008649333;s2008650333;0.803679,0.07456001,-0.4183209")--planet surface

	--local targetpos = Vector(0.003537618,0.01925059,0.2446546)
	--cam:SetPos(targetpos)
	cam:SetGlobalName("player_cam")
end
function UnloadWorld()
	if network.IsConnected() then
		network.Disconnect()
	end
	SetController()  
	cam:SetParent(LOBBY)
	
	if U then
		U:Despawn()
		U = nil
	end
end

function SpawnPlayerChar()  
	local ship = cam:GetParent()
	local targetpos = Vector(0.003537618,0.01925059,0.2446546)
	local targetpos2 = Vector(0.003008218, -0.07939442, -0.02011958)
	local targetpos3 = Vector(0.4954455, -0.002244724, 0.02894697)
	
	local actor = ents.Create("base_actor")
	actor:SetSizepower(1000)
	actor:SetParent(ship)
	actor:SetSeed(120000)
	actor:SetPos(targetpos+Vector(0.001,0,0)) 
	actor:SetModel("flyingpanther/nightwing.json")
	actor:Spawn()   
	
	local actor2 = ents.Create("base_actor")
	actor2:SetSizepower(1000)
	actor2:SetParent(ship)
	actor2:SetSeed(120001)
	actor2:SetPos(targetpos)--targetpos3)--+Vector(0.001,0,0)) 
	actor2:SetModel(debug.LoadString("player.model"))-- "kindred/kindred.json")
	actor2:Spawn()
	actor2.phys:SetGravity(Vector(0,-4,0)) 
	
	TACTOR = actor2
	TACTOR:SetGlobalName('player') 
	SetController('actorcontroller')  
	
	 
	local system = TACTOR:GetParentWith(NTYPE_STARSYSTEM)
	if system then 
		system:ReloadSkybox()
	end 
	-- lua_run  TACTOR:GetParentWith(NTYPE_STARSYSTEM):ReloadSkybox()
end
function SPA() 
	local cc = GetCamera()
	local fpos = cc:GetPos()
	local actor2 = ents.Create("base_actor")
	actor2:SetSizepower(1000)
	actor2:SetParent(cc:GetParent())
	actor2:SetSeed(120000)
	actor2:SetPos(fpos) 
	actor2:SetModel(debug.LoadString("player.model"))
	actor2:Spawn()
	actor2.phys:SetGravity(Vector(0,-4,0))
	
	TACTOR = actor2
	TACTOR:SetGlobalName('player') 
	SetController('actorcontroller')  
end
function SPT(scale)
	local cc = GetCamera()
	local fpos = cc:GetPos()
	--SpawnSO("engine/unit_box.SMD",cc:GetParent(),fpos,scale or 0.01).model:SetMaterial("textures/debug/white.json") 
	SpawnSO("test/tree2/dtree.json",cc:GetParent(),fpos,scale or 0.01)
end

if serverconnect then
	network.Connect("192.168.1.2:3939")
else

	if loadworld then
	
		LoadWorld()
			
		
		if charcontroll then 
			SpawnPlayerChar()
		else 
			SetController("freecameracontroller")
			
			--TEST_CGM(GetCamera():GetParent())
		end
	end
	
	if testgui then
		--local rdeb = panel.Create("window_renderdebug") 
		--rdeb:SetPos(0,0) --+csize.x +csize.y
		--rdeb:SetTitle("Rendertime")
		--rdeb:Show()
		
		local wn = panel.Create("menu_main") 
		wn:SetPos(0,0)  
		wn:Show()
		--
		local vsize = GetViewportSize()
		chat = panel.Create("window_chat") 
		local csize = chat:GetSize()
		chat:SetPos(-vsize.x,-vsize.y) --+csize.x +csize.y
		chat:SetTitle("Chat")
		chat:Show()
		hook.Add("input.keydown","chat",function(key)  
			if not input.GetKeyboardBusy() then
				if key == KEYS_T then
					_CCC = chat
					debug.Delayed(1,function()
						_CCC.input_text:Select()
						_CCC = nil
					end)
				end
			end
		end)
		
		--local wn = panel.Create("window_console") 
		--wn:SetPos(100,0) 
		--wn:SetTitle("ConsoleWindow")
		--wn:Show()
	end
	
end
--if serverconnect then
--[[
	local sz = actor:GetParent():GetSizepower()
	--local lastpos = actor:GetPos()*sz
	local lposray = {lastpos}
	local cp = 1
	local delta = 1
	local npc = actor2
	hook.Add("main.update","acfa",function() 
		local a1pos = npc:GetPos()*sz
		local a2pos =LPTABLE[cp]-- actor2:GetPos()*sz
		if a2pos == nil then
			if delta == 1 then
				delta = -1
				cp = cp -1
			else
				delta = 1
				cp = cp +1
			end
			a2pos =LPTABLE[cp]
		end
		local dir = (a2pos-a1pos):Normalized()
		local dist = a1pos:Distance(a2pos)
		npc:LookAt((a2pos-a1pos):Rotate(Vector(0,90,0)))
		npc.phys:SetViewDirection(dir)
		npc.phys:SetStandingSpeed(1)
		if(dist>0.3)then
			npc.targetpos = Vector(0,0,1)
		end
		if(dist<0.1)then
			--npc.move  = nil
			cp = cp+delta
		end
		
		fff_GoToPos(actor,npc:GetPos())
		--local ldd = lastpos:Distance(a1pos)
		--if(ldd>0.5)then
		--	lastpos= a1pos
		--	lposray[#lposray+1] = a1pos
		--	--SaveTable("testlp.txt",lposray,99)
		--end
		 
	end)
	
	local planet = ship:GetParent()
	
	local ring = ents.Create("ring")
	ring:SetSizepower(1000000)
	ring:SetParent(planet)
	ring:SetSeed(229999)
	ring:SetPos(ship:GetPos():Rotate(Vector(0,90,0)))  
	ring:Spawn()   
	--ship:SetParent(ring)
	--ship:SetPos(ring.sections[1]:GetPos()*0.95)
	]]
--	hook.Add("main.update","acfa",function() 
--		local npc = ents.GetById(120000)
--		local player = ents.GetById(120001)
--		if npc and player then
--			fff_GoToPos(npc,player:GetPos()) 
--		end
--	end)
--
--end

function fff_GoToPos(npc,pos)
	local sz = npc:GetParent():GetSizepower()
	local a1pos = npc:GetPos()*sz
	local a2pos = pos*sz
	local dir = (a2pos-a1pos):Normalized()
	local dist = a1pos:Distance(a2pos)
	npc.phys:SetStandingSpeed(1)
	if npc.targetpos then
		npc:LookAt((a2pos-a1pos):Rotate(Vector(0,90,0)))
		npc.phys:SetViewDirection(dir)
	end
	if(dist>4)then
		npc.targetpos = Vector(0,0,1)
	end
	if(dist<2)then
		npc.targetpos  = nil 
	end
end