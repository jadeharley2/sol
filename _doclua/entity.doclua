-----------------
-- @field[parent = #global] ents#ents ents

-----------------
-- get node by its global name
-- @function[parent = #ents] GetByName
-- @param #string name
-- @return #Entity

-----------------
-- get node by seed
-- @function[parent = #ents] GetById
-- @param #number seed
-- @return #Entity

-----------------
-- create new node
-- @function[parent = #ents] Create
-- @param #string type
-- @return #Entity

-----------------
-- create new universe [deprecated]
-- @function[parent = #ents] CreateUniverse
-- @return #Entity

-----------------
-- create new camera node (special)
-- @function[parent = #ents] CreateCamera
-- @return #Camera

-----------------
-- spawn preset in node
-- @function[parent = #ents] SpawnPreset 
-- @param self
-- @param #string path

-----------------
-- add node type
-- @function[parent = #ents] AddType
-- @param #string name
-- @param #table metatable

-----------------
-- get node type by name
-- @function[parent = #ents] GetType
-- @param #string name
-- @return #table

-----------------
-- get all SENT types
-- @function[parent = #ents] GetTypeList
-- @return #table

-----------------
-- @type Entity

-----------------
-- spawn node
-- @function[parent = #Entity] Spawn

-----------------
-- remove node
-- @function[parent = #Entity] Despawn

-----------------
-- spawn new node and add it to current world state
-- @function[parent = #Entity] Create

-----------------
-- despwan and remove node from current world state
-- @function[parent = #Entity] Destroy

-----------------
-- invoke onentry function
-- @function[parent = #Entity] Enter

-----------------
-- invoke onleave function
-- @function[parent = #Entity] Leave

-----------------
-- eject node from its parent
-- @function[parent = #Entity] Eject

-----------------
-- despawn all children nodes
-- @function[parent = #Entity] UnloadSubs

-----------------
-- add flag to node
-- @function[parent = #Entity] AddFlag
-- @param #number type

-----------------
-- remove flag from node
-- @function[parent = #Entity] RemoveFlag
-- @param #number type

-----------------
-- check flag on node
-- @function[parent = #Entity] HasFlag
-- @param #number type
-- @return #boolean

-----------------
-- add component to node
-- @function[parent = #Entity] AddComponent
-- @param #number type
-- @return #Component

-----------------
-- remove given component from node
-- @function[parent = #Entity] RemoveComponent
-- @param #Component component

-----------------
-- remove all components of type from node
-- @function[parent = #Entity] RemoveComponents
-- @param #number type

-----------------
-- get first component of type from node
-- @function[parent = #Entity] GetComponent
-- @param #number type
-- @return #Component

-----------------
-- add event listener function for event type
-- @function[parent = #Entity] AddEventListener
-- @param #number type
-- @param #string name
-- @param #function method

-----------------
-- remove event listener function for event type 
-- @function[parent = #Entity] RemoveEventListener
-- @param #number type
-- @param #string name

-----------------
-- send event of type to node with given arguments
-- @function[parent = #Entity] SendEvent
-- @param #number type
-- @param #any ...
-- @return #any

-----------------
-- emit sound from node
-- @function[parent = #Entity] EmitSound
-- @param #string soundpath
-- @param #number volume

-----------------
-- get node hierarchy children
-- @function[parent = #Entity] GetChildren
-- @return #table

-----------------
-- get node parent of given node type
-- @function[parent = #Entity] GetParentWith
-- @param #number type
-- @return #Entity

-----------------
-- get node parent with given flag
-- @function[parent = #Entity] GetParentWithFlag
-- @param #number flag
-- @return #Entity

-----------------
-- get node parent with given component type
-- @function[parent = #Entity] GetParentWithComponent
-- @param #number flag
-- @return #Entity
-- @return # Component

-----------------
-- get node hierarchy
-- @function[parent = #Entity] GetHierarchy
-- @return #table

-----------------
-- gets node seed
-- @function[parent = #Entity] GetSeed
-- @return #number

-----------------
-- sets node seed
-- @function[parent = #Entity] SetSeed
-- @param #number value

-----------------
-- gets node name
-- @function[parent = #Entity] GetName
-- @return #string

-----------------
-- sets node name
-- @function[parent = #Entity] SetName
-- @param #string value

-----------------
-- gets node global name
-- @function[parent = #Entity] GetGlobalName
-- @return #string

-----------------
-- sets node global name
-- @function[parent = #Entity] SetGlobalName
-- @param #string value

-----------------
-- gets node parent
-- @function[parent = #Entity] GetParent
-- @return #Entity

-----------------
-- sets node parent
-- @function[parent = #Entity] SetParent
-- @param #Entity value

-----------------
-- gets node absolute metric size
-- @function[parent = #Entity] GetSizepower
-- @return #number

-----------------
-- sets node absolute metric size
-- @function[parent = #Entity] SetSizepower
-- @param #number value

-----------------
-- gets node position relative to parent
-- @function[parent = #Entity] GetPos
-- @return #Vector

-----------------
-- sets node position relative to parent
-- @function[parent = #Entity] SetPos
-- @param #Vector value

-----------------
-- gets metric node position relative to parent
-- @function[parent = #Entity] GetAbsPos
-- @return #Vector

-----------------
-- sets metric node position relative to parent
-- @function[parent = #Entity] SetAbsPos
-- @param #Vector value

-----------------
-- gets node angle relative to parent
-- @function[parent = #Entity] GetAng
-- @return #Vector

-----------------
-- sets node angle relative to parent
-- @function[parent = #Entity] SetAng
-- @param #Vector value

-----------------
-- gets node scale relative to its AMS
-- @function[parent = #Entity] GetScale
-- @return #number

-----------------
-- sets node scale relative to its AMS
-- @function[parent = #Entity] SetScale
-- @param #number value

-----------------
-- gets node position, rotation and scale from matrix
-- @function[parent = #Entity] GetWorld
-- @return #Matrix

-----------------
-- sets node position, rotation and scale from matrix
-- @function[parent = #Entity] SetWorld
-- @param #Matrix value

-----------------
-- gets node lua table
-- @function[parent = #Entity] GetTable
-- @return #table

-----------------
-- sets node lua table
-- @function[parent = #Entity] SetTable
-- @param #table value

-----------------
-- gets node parameter (VARTYPE_*)
-- @function[parent = #Entity] GetParameter
-- @return #any

-----------------
-- sets node parameter (VARTYPE_*)
-- @function[parent = #Entity] SetParameter
-- @param #any value

-----------------
-- gets enables position based parent change check
-- @function[parent = #Entity] GetUpdateSpace
-- @return #boolean

-----------------
-- sets enables position based parent change check
-- @function[parent = #Entity] SetUpdateSpace
-- @param #boolean value

-----------------
-- gets enables in/out transition for other nodes
-- @function[parent = #Entity] GetSpaceEnabled
-- @return #boolean

-----------------
-- sets enables in/out transition for other nodes
-- @function[parent = #Entity] SetSpaceEnabled
-- @param #boolean value

-----------------
-- gets enables Think() calls
-- @function[parent = #Entity] GetUpdating
-- @return #boolean

-----------------
-- sets enables Think() calls
-- @function[parent = #Entity] SetUpdating
-- @param #boolean value

-----------------
-- gets enables children cleanup on Exit() call
-- @function[parent = #Entity] GetUnloadOnExit
-- @return #boolean

-----------------
-- sets enables children cleanup on Exit() call
-- @function[parent = #Entity] SetUnloadOnExit
-- @param #boolean value

-----------------
-- gets networked double by given key
-- @function[parent = #Entity] GetNWDouble
-- @return #number

-----------------
-- sets networked double by given key
-- @function[parent = #Entity] SetNWDouble
-- @param #number value

-----------------
-- gets networked vector by given key
-- @function[parent = #Entity] GetNWVector
-- @return #Vector

-----------------
-- sets networked vector by given key
-- @function[parent = #Entity] SetNWVector
-- @param #Vector value

-----------------
-- get other node coordinates in this node coordinate system
-- @function[parent = #Entity] GetLocalCoordinates
-- @param #Entity target
-- @return #Vector

-----------------
-- get other node world matrix in this node coordinate system
-- @function[parent = #Entity] GetLocalSpace
-- @param #Entity target
-- @return #Matrix

-----------------
-- get distance to other node in this node coordinate system units
-- @function[parent = #Entity] GetDistance
-- @param #Entity target
-- @return #number

-----------------
-- get forward(X-) direction from node rotation
-- @function[parent = #Entity] Forward
-- @return #Vector

-----------------
-- get right(Z+) direction from node rotation
-- @function[parent = #Entity] Right
-- @return #Vector

-----------------
-- get up(Y+) direction from node rotation
-- @function[parent = #Entity] Up
-- @return #Vector

-----------------
-- modify node angles with rotation around given axis and angle
-- @function[parent = #Entity] RotateAroundAxis
-- @param #Vector axis
-- @param #number angle

-----------------
-- modify node angles with rotation around given axis and angle in inverse
-- @function[parent = #Entity] TRotateAroundAxis
-- @param #Vector axis
-- @param #number angle

-----------------
-- set node angles to 'look at node' rotation
-- @function[parent = #Entity] LookAt
-- @param #Entity target

-----------------
-- copy angle from other node
-- @function[parent = #Entity] CopyAng
-- @param #Entity target

-----------------
-- prints node hierarchy to console
-- @function[parent = #Entity] PrintHierarchy

-----------------
-- perform simple raytrace in parent node space from node position and given direction
-- @function[parent = #Entity] Trace
-- @param #Vector direction
-- @param #table filter
-- @return #Vector

-----------------
-- @type Camera
-- @extends #Entity

-----------------
-- project position vector by camera mViewProjection matrix
-- @function[parent = #Camera] Project
-- @param #Vector position
-- @return #Vector

-----------------
-- unproject position vector by camera mViewProjection matrix
-- @function[parent = #Camera] Unproject
-- @param #Vector position
-- @return #Vector

-----------------
-- gets camera aspect ratio
-- @function[parent = #Camera] GetAspectRatio
-- @return #number

-----------------
-- sets camera aspect ratio
-- @function[parent = #Camera] SetAspectRatio
-- @param #number value

-----------------
-- add node to origin list
-- @function[parent = #global] AddOrigin
-- @param #Entity node

-----------------
-- remove node from origin list
-- @function[parent = #global] RemoveOrigin
-- @param #Entity node

-----------------
-- get all origin nodes
-- @function[parent = #global] GetOriginList
-- @return #table

-----------------
-- set renderer current camera
-- @function[parent = #global] SetCamera
-- @param #Camera camera

-----------------
-- get renderer current camera
-- @function[parent = #global] GetCamera
-- @return #Camera

-----------------
-- get 3d perlin noise value at pos
-- @function[parent = #global] PerlinNoise
-- @param #Vector position
-- @return #number

-----------------
-- get current system time of day in seconds
-- @function[parent = #global] CurTime
-- @return #number

-----------------
-- send entity by string address
-- @function[parent = #global] SendTo
-- @param #Entity node
-- @param #string address

-----------------
-- 
-- @function[parent = #global] SaveAvailable

-----------------
-- 
-- @function[parent = #global] LoadSave

--------------------------------------------------------------------------------
-- @field [parent=#global] #Entity ENT  
-- 
-- 

return nil

